N_PC = config["NPC"]

def run_pca(input, output, params, wildcards, config):
        infile = base(input.bed)
        s = '%s --bfile %s ' % (config['EXE']['flashpca'], infile)
        s += '--ndim %s ' % wildcards.ndim 
        s += '--outpc {output.pc} '
        s += '--outload {output.load} '
        s += '--outpve {output.pve} '
        s += '--v --mem low --seed {params.seed}'
        shell(s)

rule run_flashpca_outliers:
    input:
        bed='subset_nopca/{name}.bed',
        bim='subset_nopca/{name}.bim',
        fam='subset_nopca/{name}.fam',
    output:
        pc="subset_nopca/flash_{name}_dim{ndim, \d+}.pc",
        load="subset_nopca/flash_{name}_dim{ndim, \d+}.load",
        pve="subset_nopca/flash_{name}_dim{ndim, \d+}.pve",
    params: seed=14
    run: 
        run_pca(input, output, params, wildcards, config)

rule run_flashpca:
    input:
        bed='subset/{name}.bed',
        bim='subset/{name}.bim',
        fam='subset/{name}.fam',
    output:
        pc=protected("pca/flash_{name}_dim{ndim}.pc"),
        load=protected("pca/flash_{name}_dim{ndim}.load"),
        pve=protected("pca/flash_{name}_dim{ndim}.pve")
    params: seed=12
    run: 
        run_pca(input, output, params, wildcards, config)

rule get_pca_outliers:
    input:
        loadings='subset_nopca/flash_{name}_dim{ndims}.load',
        bimfile='subset_nopca/{name}.bim',
        __script__='scripts/get_pca_outliers.R'
    params: 
        abs_cutoff=50000000000000,
        region_bp=100000
    output:
        outliers="subset/{name}_dim{ndims}.outlier_snp"
    shell:
        "Rscript {input.__script__} {input.loadings} {input.bimfile} "
        "{params.region_bp} {params.abs_cutoff} {output.outliers} "

__script__6='scripts/ggpca.R'
rule make_pc_plots_wdf:
    input:
        pc='pca/flash_{name}_dim{NPC, \d+}.pc',
        fam='subset/{name}.fam',
        indiv_meta='subset/{name}.indiv_meta',
        pop_display=_POP_DISPLAY_,
        pop_geo=_POP_GEO_,
        pop_order="subset/{name}.pop_order",
        __script__6='scripts/ggpca.R'
    params:
        wdf=True
    output:
        #pc1=expand('figures/pca/pc1d_{name}_pc{PC}_wdf.png', 
        #    PC=range(1,21), name=['{name}']),
        pc2=expand('figures/pca/pc2d_{name}_pc{PC}_wdf.png', 
            PC=range(1,21,2), name=['{name}']),
        pve="figures/pca/pve_{name}_wdf.png",
        rdsname="figures/pca/pc2d_{name}_wdf.rds",
        rdspvename="figures/pca/pve_{name}_wdf.rds"
    script: "../" +__script__6
    #shell: config['EXE']['R']  + " {input.__script__} {input.pc} {input.fam}"
    #    " {input.indiv_meta} {input.pop_display} "
    #    " {output.pc1} {output.pc2} {NPC, \d+}"

rule make_pc_plots:
    input:
        pc='pca/flash_{name}_dim{NPC, \d+}.pc',
        fam='subset/{name}.fam',
        indiv_meta='subset/{name}.indiv_meta',
        pop_display=_POP_DISPLAY_,
        pop_order="subset/{name}.pop_order",
        pop_geo=_POP_GEO_,
        __script__='scripts/ggpca.R'
    params:
        wdf=False
    output:
        pc1=expand('figures/pca/pc1d_{name}_pc{PC}.png', 
            PC=range(1,21), name=['{name}']),
        pc2=expand('figures/pca/pc2d_{name}_pc{PC}.png', 
            PC=range(1,21,2), name=['{name}']),
        pve="figures/pca/pve_{name}.png",
        rdsname="figures/pca/pc2d_{name}.rds",
        #map_bit="figures/paper/map_{name}.rds",
        #map_bit_png="figures/paper/map_{name}.png",
        rdspvename="figures/pca/pve_{name}.rds"
    script: "../" +__script__6

rule make_2d_pc_plots:
    input:
        pc='pca/flash_{name}_dim' + N_PC + '.pc',
        median='pca/median_{name}_dim' + N_PC + '.pc',
        fam='subset/{name}.fam',
        indiv_meta='subset/{name}.indiv_meta',
        pop_display=_POP_DISPLAY_,
        pop_order="subset/{name}.pop_order",
        pve="pca/flash_{name}_dim" + N_PC + '.pve',
        pop_geo=_POP_GEO_,
        __script__='scripts/pca/run_2d.R',
        _libscript='scripts/ggpca2d.R',
    params:
        wdf=False
    output:
        pc2=expand('figures/pca/2d/{name}_pc{PC}.png', 
            PC=range(1,5,2), name=['{name}']),
        pc2rds=expand('figures/pca/2d/{name}_pc{PC}.rds', 
            PC=range(1,5,2), name=['{name}']),
        out_map_rds="figures/paper/map_{name}.rds",
        out_map_png="figures/paper/map_{name}.png",
    script: "../" +"scripts/pca/run_2d.R"

rule make_2d_pc_plots_supersetcolor:
    """
        this rule is for making a 2d plot that uses colors from a different run
        this is e.g. needed when I use Europe and Europe+Medi runs in the same 
        figure, i.e. I want the colors in Europe to be the subset in the above
    """
    input:
        pc='pca/flash_{name}_dim' + N_PC + '.pc',
        pve="pca/flash_{name}_dim" + N_PC + ".pve",
        median='pca/median_{name}_dim' + N_PC + '.pc',
        fam='subset/{name}.fam',
        indiv_meta='subset/{name}.indiv_meta',

        super_pc="pca/flash_{super}_dim" + N_PC + '.pc',
        super_pve="pca/flash_{super}_dim" + N_PC + ".pve",
        super_median='pca/median_{super}_dim' + N_PC + '.pc',
        super_fam='subset/{super}.fam',
        super_indiv_meta='subset/{super}.indiv_meta',

        pop_display=_POP_DISPLAY_,
        pop_order="subset/{name}.pop_order",
        pop_geo=_POP_GEO_,
        __script__='scripts/pca/run_2d.R',
        _libscript='scripts/ggpca2d.R',
    params:
        wdf=False
    output:
        pc2=expand('figures/pca/super/{super}/{name}_pc{PC}.png', 
            PC=range(1,5,2), name=['{name}'], super=['{super}']),
        pc2rds=expand('figures/pca/super/{super}/{name}_pc{PC}.rds', 
            PC=range(1,5,2), name=['{name}'], super=['{super}']),

        pc2_both=expand('figures/pca/both/{super}/{name}_pc{PC}.png', 
            PC=range(1,5,2), name=['{name}'], super=['{super}']),
        pc2rds_both=expand('figures/pca/both/{super}/{name}_pc{PC}.rds', 
            PC=range(1,5,2), name=['{name}'], super=['{super}']),

        out_map_both_rds="figures/paper/super/map_both_{super}_{name}.rds",
        out_map_both_png="figures/paper/super/map_both_{super}_{name}.png",
        out_map_rds="figures/paper/super/map_{super}_{name}.rds",
        out_map_png="figures/paper/super/map_{super}_{name}.png",
    script: "../" +"scripts/pca/run_2d.R"
rule make_pve_plot:
    input:
        pve_file="pca/flash_{name}_dim" + N_PC + ".pve",
        script="scripts/pca/pve.R"
    output:
        png="figures/pca/pve/{name}.png",
        rds="figures/pca/pve/{name}.rds",
    script: "../scripts/pca/pve.R"
        

script_median='scripts/get_pc_median.R'
rule pca_median:
    input:
        pc='pca/flash_{name}_dim{NPC, \d+}.pc',
        fam='subset/{name}.fam',
        indiv_meta='subset/{name}.indiv_meta',
        pop_display=_POP_DISPLAY_,
        __script__=script_median
    output:
        pc='pca/median_{name}_dim{NPC, \d+}.pc'
    script: "../" + script_median

rule make_pc_plots_highlight_excluded:
    input:
        pc='pca/flash_{name}_dim{NPC, \d+}.pc',
        fam='subset/{name}.fam',
        exfam='subset/{exname}.fam',
        indiv_meta='subset/{name}.indiv_meta',
        pop_display=_POP_DISPLAY_,
        pop_geo=_POP_GEO_,
        pop_order="subset/{name}.pop_order",
        __script__='scripts/ggpca.R'
    params:
        wdf=False
    output:
        pc1=expand('figures/pcaex/pc1d_{name}_ex:{exname}_pc{PC}.png', 
            PC=range(1,21), name=['{name}'], exname=['{exname}']),
        pc2=expand('figures/pcaex/pc2d_{name}_ex:{exname}_pc{PC}.png', 
            PC=range(1,21,2), name=['{name}'], exname=['{exname}']),
    script: "../" +__script__6

__script__7='scripts/pcaloadings.R'
rule make_loadings_plots:
    input:
        load='pca/flash_{name}_dim' + N_PC + '.load',
        bim='subset/{name}.bim'  ,
        __script__='scripts/pcaloadings.R'
    output:
        fig=expand('figures/pca/loadings_{name}_pc{PC}.png', 
            PC=range(1,11), name=['{name}']),
    script: '../' + __script__7
    #shell:
    #    config['EXE']['R'] + " {input.__script__} {input.load} "
    #    "{input.bim} {output.fig}"


__script__8="scripts/pca_derived_order.R"
rule get_pca_derived_order:
    input:
        pc="subset_nopca/flash_{name}_dim10.pc", #hard code to 10 for now
        inds="subset_nopca/{name}.fam",
        pop="subset/{name}.indiv_meta",
        __script__="scripts/pca_derived_order.R"
    output:
        pop_order="subset/{name}.pop_order",
    script:
        "../" + __script__8


__script__9='scripts/pca_vs_geo.R'
rule pca_vs_gen:
    input:
        pc='pca/flash_{name}_dim{NPC, \d+}.pc',
        ipmap='eemsout/0/{name}/ipmap.txt',
        fam='subset/{name}.fam',
        indiv_meta='subset/{name}.indiv_meta',
        pop_display=_POP_DISPLAY_,
        pop_order="subset/{name}.pop_order",
        pop_geo='subset/{name}.pop_geo',
        diffs='eems/{name}.diffs',
        order='eems/{name}.order',
        __script__='scripts/pca_vs_geo.R',
    output:
        pcvsdist='figures/pcvsdist/{name}_pc1-{npcs}.png',
        pcvsgrid='figures/pcvsgrid/{name}_pc1-{npcs}.png',
        rsq='figures/rsq/{name}_pc1-{npcs}.png',
        ggpcvsdist='figures/pcvsdist/{name}_pc1-{npcs}.rds',
        ggpcvsgrid='figures/pcvsgrid/{name}_pc1-{npcs}.rds',
        ggrsq='figures/rsq/{name}_pc1-{npcs}.rds',
    script: "../" +__script__9


rule synthmap:
    input:
        pc='pca/flash_{name}_dim{NPC, \d+}.pc',
        fam='subset/{name}.fam',
        indiv_meta='subset/{name}.indiv_meta',
        pop_display=_POP_DISPLAY_,
        pop_order="subset/{name}.pop_order",
        polygon="subset/{name}.polygon",
        pop_geo=_POP_GEO_,
        __script__='scripts/run_synthmap.R',
        _libscript='scripts/synthmap.R',
    output:
        plot0="figures/pca/synthmap/{name}_PC1.png",
    script: "../" + "scripts/run_synthmap.R"
