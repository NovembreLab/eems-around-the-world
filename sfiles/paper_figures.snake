rule get_excluded:
    input:
        pop_display=_POP_DISPLAY_,
        __script = "scripts/get_excluded.R"
    output:
        excluded='subset/excluded.txt',
    script:
        "../scripts/get_excluded.R"

rule table_excluded:
    input:
        excluded='subset/excluded.txt',
    output:
        "paper/table_excluded.csv"
    shell: "cp {input} {output}"


__script__1="scripts/poly_overview.R"
rule subset_all_polygon_plot:
    input:
        polys=subset_paper_fun(prefix='subset/', ext='.polygon'),
        pop_geo=subset_paper_fun(prefix='subset/', ext='.pop_geo', subset0=False),
        pop_display=_POP_DISPLAY_,
        excluded='subset/excluded.txt',
        script= __script__1
    output:
        png="paper/polygon_plot.pdf"
    script: "../" + __script__1

__script__2="scripts/table_panels.R"
rule table_panels:
    input:
        indiv_meta=subset_paper_fun(prefix='subset/', ext='.indiv_meta'),
        bim=subset_paper_fun(prefix='subset/', ext='.bim'),
        fst=subset_paper_fun(prefix='subset/', ext='.fstall'),
        script= __script__2
    params:
        panels=subsets_paper,
        abbrev=subsets_abbrev,
        names=subsets_names
    output:
        csv="rawtables/table_panel.csv"
    script: "../" + __script__2

rule remove_underscore:
    input : "rawtables/{name}.csv"
    output: "paper/{name}.csv"
    shell : "sed -e 's/_/ /g; ' {input} >{output}"

__script__3="scripts/table_sources.R"
rule table_sources:
    input:
        indiv_meta=subset_paper_fun(prefix='subset/', ext='.indiv_meta'),
        pub_label="pgs/gvar3.pub",
        script= __script__3
    output:
        csv='rawtables/table_sources.csv'
    script: "../" + __script__3

__script__4="scripts/table_loc.R"
rule table_locations:
    input:
        indiv_meta0 = _INDIV_META_,
        languages = _META_ + ".language2",
        indiv_meta=subset_paper_fun(prefix='subset/', ext='.indiv_meta'),
        pop_geo=_POP_GEO_,
        pop_display=_POP_DISPLAY_,
        script= __script__4,
        pub_label="pgs/gvar3.pub",
        loc_src="pgs/gvar3.locsrc",
    params:
        panels=subsets_paper,
        abbrev=subsets_abbrev,
        names=subsets_names
    output:
        csv='rawtables/table_loc.csv'
    script: "../" + __script__4

rule all_tables:
    input:
        "paper/polygon_plot.pdf",
        'paper/table_sources.csv',
        "paper/table_panel.csv",
        'paper/table_loc.csv',

rule tex_blurb:
    output: "blurbs/{name}.tex",
    shell: "touch {output}"


reportshell=r"""
\documentclass[10pt,a4paper]{{article}}
\usepackage[margin=0.5in]{{geometry}}

\textwidth=18cm

\usepackage[utf8]{{inputenc}}
\usepackage{{amsmath}}
\usepackage{{amsfonts}}
\usepackage{{amssymb}}
\usepackage{{graphicx}}
\author{{Benjamin Peter}}
\begin{{document}}

\subsubsection*{{Results for {name}}}
\input{{blurbs/{name}/results.tex}}
\subsubsection*{{Discussion for {name}}}
\input{{blurbs/{name}/discussion.tex}}
\newpage
%s
\end{{document}}
"""

figuretex = r"""\begin{{figure}}
\includegraphics[width=\textwidth]{{eemsout_gg/{name}_nruns3-mrates02.png}}
\end{{figure}}


\begin{{figure}}
\includegraphics[width=.3\textwidth]{{figures/pca/pc2d_{name}_pc1.png}}
\includegraphics[width=.3\textwidth]{{figures/pca/pc2d_{name}_pc3.png}}
\includegraphics[width=.3\textwidth]{{figures/pca/pc2d_{name}_pc5.png}}
\end{{figure}}

\begin{{figure}}
\includegraphics[width=.3\textwidth]{{figures/pca/loadings_{name}_pc1.png}}
\includegraphics[width=.3\textwidth]{{figures/pca/loadings_{name}_pc2.png}}
\includegraphics[width=.3\textwidth]{{figures/pca/loadings_{name}_pc3.png}}\\
\includegraphics[width=.3\textwidth]{{figures/pca/loadings_{name}_pc4.png}}
\includegraphics[width=.3\textwidth]{{figures/pca/loadings_{name}_pc5.png}}
\includegraphics[width=.3\textwidth]{{figures/pca/loadings_{name}_pc6.png}}
\end{{figure}}

\begin{{figure}}
\includegraphics[width=0.3\textwidth]{{eemsout_gg/{name}_nruns3-scatter02.png}}
\includegraphics[width=0.3\textwidth]{{eemsout_gg/{name}_nruns3-scatter01.png}}
\includegraphics[width=.3\textwidth]{{figures/pcvsgrid/{name}_pc1-2.png}}\\
\includegraphics[width=0.3\textwidth]{{eemsout_gg/{name}_nruns3-scatter04.png}}
\includegraphics[width=.3\textwidth]{{figures/pca/pve_{name}.png}}
\includegraphics[width=.3\textwidth]{{figures/rsq/{name}_pc1-20.png}}
\end{{figure}}

\begin{{figure}}
\includegraphics[width=.3\textwidth]{{figures/pca/pc2d_{name}_pc1_wdf.png}}
\includegraphics[width=.3\textwidth]{{figures/pca/pc2d_{name}_pc3_wdf.png}}
\includegraphics[width=.3\textwidth]{{figures/pca/pc2d_{name}_pc5_wdf.png}}
\end{{figure}}
"""
rule report:
    input:
        "eemsout_gg/{name}_nruns3-scatter01.png",
        "eemsout_gg/{name}_nruns3-scatter02.png",
        "eemsout_gg/{name}_nruns3-scatter04.png",
        "figures/pcvsgrid/{name}_pc1-2.png",
        "figures/rsq/{name}_pc1-20.png",
        "eemsout_gg/{name}_nruns3-mrates02.png",
        "figures/pca/pc2d_{name}_pc1.png",
        "figures/pca/pc2d_{name}_pc3.png",
        "figures/pca/pc2d_{name}_pc5.png",
        "figures/pca/pc2d_{name}_pc1_wdf.png",
        "figures/pca/pc2d_{name}_pc3_wdf.png",
        "figures/pca/pc2d_{name}_pc5_wdf.png",
        "figures/pca/loadings_{name}_pc1.png",
        "figures/pca/loadings_{name}_pc2.png",
        "figures/pca/loadings_{name}_pc3.png",
        "figures/pca/loadings_{name}_pc4.png",
        "figures/pca/loadings_{name}_pc5.png",
        "figures/pca/loadings_{name}_pc6.png",
        "blurbs/{name}/discussion.tex",
        "blurbs/{name}/results.tex",
    output:
        pdf="reports/report_{name}.pdf",
        tex="reports/report_{name}.tex"
    run:
        rs = reportshell % figuretex
        rs= rs.format(name=wildcards.name)
        with open(output.tex, 'w') as f:
            f.write(rs)
        shell("pdflatex -aux-directory=reports -output-directory=reports  {output.tex}")
        

rule all_reports:
    input:
        reps=subset_paper_fun(prefix='reports/report_', ext='.pdf'),

__script__5="scripts/pca_panels.R"
rule pca_fig:
    input:
        subset_paper_fun(prefix="figures/pca/pc2d_", ext=".rds"),
        __script__=__script__5
    output:
        "figures/paper/pca2.png"
    script: "../" + __script__5

rule list_exclusion_rules:
    input:
        pop_display=_POP_DISPLAY_,
    output: "excl/{name}.excl"
    run:
        import pandas as pd
        cfg = load_subset_config(config['subset'], wildcards.name)
        print(cfg['exclude_pop'])
        x = pd.read_csv(input.pop_display)
        x = x[x.popId.isin(cfg['exclude_pop'])]
        x['run'] = wildcards.name
        x.to_csv(output[0], index=False)
        


rule paper_fig:
    input: 
        subset_paper_fun(prefix="figures/paper/scatter_", ext="_nruns4.png"),
#        subset_paper_fun(prefix="figures/paper/scatter_", ext="_nruns3.png", subset0=True )

rule composite_fig:
    input:
        errors="eemsout_gg/{name}_nruns4-error-pop01.rds",
        map1="eemsout_gg/{name}_nruns4-mrates01.rds",
        map2="eemsout_gg/{name}_nruns4-mrates02.rds",
        map3="figures/paper/map_{name}.rds",
        pc1="figures/pca/2d/{name}_pc1.rds",
        pc2="figures/pca/2d/{name}_pc3.rds",
        scatter="figures/dists/{name}.rds",
        pve="figures/pca/pve/{name}.rds",
        script="scripts/composite_fig.R",
    output:
        png="figures/paper/{name}.png",
#        pdf="figures/paper/{name}.pdf"
    script:
        "../" + "scripts/composite_fig.R"


rule highres_figs:
    input:
        subset_paper_fun(prefix="eemsout_gg/", ext="_nruns4-mrates01.png")
    output:
        "paper/highres_figs.tar.gz"
    shell:
        "tar czvf {output} {input}"
